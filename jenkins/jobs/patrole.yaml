# Job for Patrole + Tempest. Tests admin and Member roles.
- job-template:
    name: '{pipeline}-tempest-dsvm-patrole-{rbac-role}-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin patrole git://git.openstack.org/openstack/patrole
            TEMPEST_PLUGINS='/opt/stack/new/patrole'
            # Needed by Patrole devstack plugin
            RBAC_TEST_ROLE={rbac-role}
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true

          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST_REGEX='(?!.*\[.*\bslow\b.*\])(^patrole_tempest_plugin\.tests\.api)'
          export DEVSTACK_GATE_TEMPEST_ALL_PLUGINS=1
          export TEMPEST_CONCURRENCY=2

          export PROJECTS="openstack/patrole $PROJECTS"

          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log

# Job for py35 Patrole + Tempest. Currently only tests Member role.
- job-template:
    name: '{pipeline}-tempest-dsvm-patrole-py35-{rbac-role}-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin patrole git://git.openstack.org/openstack/patrole
            TEMPEST_PLUGINS='/opt/stack/new/patrole'
            # Needed by Patrole devstack plugin
            RBAC_TEST_ROLE={rbac-role}

            # Swift is not ready for python3 yet
            disable_service s-account
            disable_service s-container
            disable_service s-object
            disable_service s-proxy
            # Without Swift, c-bak cannot run (in the Gate at least)
            disable_service c-bak
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_USE_PYTHON3=True

          # Ensure that tempest set up is executed, but do not automatically
          # execute tempest tests; they are executed in post_test_hook.
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST_REGEX='(?!.*\[.*\bslow\b.*\])(^patrole_tempest_plugin\.tests\.api)'
          export DEVSTACK_GATE_TEMPEST_ALL_PLUGINS=1
          export TEMPEST_CONCURRENCY=2

          export PROJECTS="openstack/patrole $PROJECTS"

          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log

# Job for Patrole + Tempest multinode environment. Tests admin and Member roles.
- job-template:
    name: '{pipeline}-tempest-dsvm-patrole-multinode-{rbac-role}-{node-release}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin patrole git://git.openstack.org/openstack/patrole
            TEMPEST_PLUGINS='/opt/stack/new/patrole'
            # Needed by Patrole devstack plugin
            RBAC_TEST_ROLE={rbac-role}
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true

          # Ensure that tempest set up is executed, but do not automatically
          # execute tempest tests; they are executed in post_test_hook.
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TOPOLOGY="multinode"
          export DEVSTACK_GATE_TEMPEST_REGEX='(?=.*\[.*\bslow\b.*\])(^patrole_tempest_plugin\.tests\.api)'
          export DEVSTACK_GATE_TEMPEST_ALL_PLUGINS=1

          export PROJECTS="openstack/patrole $PROJECTS"

          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log
