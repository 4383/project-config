- job-template:
    name: '{pipeline}-tempest-dsvm-dragonflow-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin dragonflow git://git.openstack.org/openstack/dragonflow
            Q_ENABLE_DRAGONFLOW_LOCAL_CONTROLLER=True
            # Add bgp project to tempest gate job.
            enable_plugin neutron-dynamic-routing git://git.openstack.org/openstack/neutron-dynamic-routing
            DR_MODE=df-bgp
            # Add networking-sfc
            enable_plugin networking-sfc git://git.openstack.org/openstack/networking-sfc
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST=1
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Because we are testing a non standard project, add
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack/dragonflow $PROJECTS"
          export PROJECTS="openstack/neutron-dynamic-routing $PROJECTS"
          export PROJECTS="openstack/networking-sfc $PROJECTS"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/dragonflow/devstack/devstackgaterc

          function gate_hook {{
              bash -xe $BASE/new/dragonflow/dragonflow/tests/contrib/gate_hook.sh tempest
          }}
          export -f gate_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-dragonflow-dsvm-rally-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin dragonflow git://git.openstack.org/openstack/dragonflow
            Q_ENABLE_DRAGONFLOW_LOCAL_CONTROLLER=True
            enable_plugin rally git://git.openstack.org/openstack/rally
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export RALLY_SCENARIO=dragonflow
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          export PROJECTS="openstack/dragonflow $PROJECTS"
          export PROJECTS="openstack/rally $PROJECTS"

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/dragonflow/devstack/devstackgaterc

          function post_test_hook {{
              $BASE/new/rally/tests/ci/rally-gate.sh
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - rally-plot
      - console-log

- job-template:
    name: '{pipeline}-dragonflow-dsvm-fullstack-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 165
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin dragonflow git://git.openstack.org/openstack/dragonflow
            Q_ENABLE_DRAGONFLOW_LOCAL_CONTROLLER=True
            # Add bgp project to fullstack gate job.
            enable_plugin neutron-dynamic-routing git://git.openstack.org/openstack/neutron-dynamic-routing
            DR_MODE=df-bgp
            # Add networking-sfc
            enable_plugin networking-sfc git://git.openstack.org/openstack/networking-sfc
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_INSTALL_TESTONLY=1


          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          export PROJECTS="openstack/dragonflow $PROJECTS"
          export PROJECTS="openstack/neutron-dynamic-routing $PROJECTS"
          export PROJECTS="openstack/networking-sfc $PROJECTS"

          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/dragonflow/devstack/devstackgaterc

          function gate_hook {{
              bash -xe $BASE/new/dragonflow/dragonflow/tests/contrib/gate_hook.sh fullstack
          }}
          export -f gate_hook

          function post_test_hook {{
              bash -xe $BASE/new/dragonflow/dragonflow/tests/contrib/post_test_hook.sh fullstack
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-dragonflow-dsvm-fullstack-zmq-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 165
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin dragonflow git://git.openstack.org/openstack/dragonflow
            enable_plugin neutron-dynamic-routing git://git.openstack.org/openstack/neutron-dynamic-routing
            enable_plugin networking-sfc git://git.openstack.org/openstack/networking-sfc
            DR_MODE=df-bgp
            Q_ENABLE_DRAGONFLOW_LOCAL_CONTROLLER=True
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_INSTALL_TESTONLY=1

          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          export PROJECTS="openstack/dragonflow $PROJECTS"
          export PROJECTS="openstack/neutron-dynamic-routing $PROJECTS"
          export PROJECTS="openstack/networking-sfc $PROJECTS"
          export DEVSTACK_GATE_SETTINGS=/opt/stack/new/dragonflow/devstack/devstackgaterc-zmq

          function gate_hook {{
              bash -xe $BASE/new/dragonflow/dragonflow/tests/contrib/gate_hook.sh fullstack
          }}
          export -f gate_hook

          function post_test_hook {{
              bash -xe $BASE/new/dragonflow/dragonflow/tests/contrib/post_test_hook.sh fullstack
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log
