- job-template:
    name: '{pipeline}-install-dsvm-kuryr-libnetwork-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin kuryr-libnetwork http://git.openstack.org/openstack/kuryr-libnetwork
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1

          export DEVSTACK_GATE_TEMPEST=0

          export ENABLED_SERVICES=kuryr-libnetwork,etcd-server,docker-engine
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          export PROJECTS="openstack/kuryr-libnetwork $PROJECTS"
          export PROJECTS="openstack/devstack-plugin-container $PROJECTS"

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          function gate_hook {{
              bash -xe $BASE/new/kuryr-libnetwork/kuryr_libnetwork/tests/contrib/gate_hook.sh
          }}
          export -f gate_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-install-dsvm-{variant}-kuryr-kubernetes{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 125
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1

          export DEVSTACK_GATE_TEMPEST=0

          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1

          export PROJECTS="openstack/kuryr-kubernetes $PROJECTS"
          export PROJECTS="openstack/dragonflow $PROJECTS"

          function gate_hook {{
              bash -xe $BASE/new/kuryr-kubernetes/devstack/gate_hook.sh {variant}
          }}
          export -f gate_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-tempest-dsvm-kuryr-kubernetes-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 125
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin kuryr-kubernetes \
                https://git.openstack.org/openstack/kuryr-kubernetes
            ENABLED_SERVICES=""
            # Neutron services
            enable_service neutron
            enable_service q-agt
            enable_service q-dhcp
            enable_service q-l3
            enable_service q-svc
            # LBaaSv2 service and Haproxy agent
            enable_plugin neutron-lbaas \
                git://git.openstack.org/openstack/neutron-lbaas
            enable_service q-lbaasv2
            NEUTRON_LBAAS_SERVICE_PROVIDERV2="LOADBALANCERV2:Haproxy:neutron_lbaas.drivers.haproxy.plugin_driver.HaproxyOnHostPluginDriver:default"
            # Keystone
            enable_service key
            # dependencies
            enable_service mysql
            enable_service rabbit
            # Docker
            enable_service docker
            # Etcd
            enable_service etcd3
            # Kubernetes
            enable_service kubernetes-api
            enable_service kubernetes-controller-manager
            enable_service kubernetes-scheduler
            KURYR_K8S_API_PORT="8080"
            # Kubelet
            enable_service kubelet
            # Kuryr watcher
            enable_service kuryr-kubernetes
            # Enable Tempest
            enable_service tempest
            # Enable Tempest plugin
            TEMPEST_PLUGINS='/opt/stack/new/kuryr-tempest-plugin'
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST_REGEX="kuryr_tempest_plugin.tests"
          export BRANCH_OVERRIDE={branch-override}

          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          export PROJECTS="openstack/kuryr-kubernetes $PROJECTS"
          export PROJECTS="openstack/kuryr-tempest-plugin $PROJECTS"

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-tempest-dsvm-kuryr-kubernetes-multinode-{node-release}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 125
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin kuryr-kubernetes \
                https://git.openstack.org/openstack/kuryr-kubernetes
            ENABLED_SERVICES=""
            # Neutron services
            enable_service neutron
            enable_service q-agt
            enable_service q-dhcp
            enable_service q-l3
            enable_service q-svc
            # LBaaSv2 service and Haproxy agent
            enable_plugin neutron-lbaas \
                git://git.openstack.org/openstack/neutron-lbaas
            enable_service q-lbaasv2
            NEUTRON_LBAAS_SERVICE_PROVIDERV2="LOADBALANCERV2:Haproxy:neutron_lbaas.drivers.haproxy.plugin_driver.HaproxyOnHostPluginDriver:default"
            # Keystone
            enable_service key
            # dependencies
            enable_service mysql
            enable_service rabbit
            # Docker
            enable_plugin devstack-plugin-container \
                git://git.openstack.org/openstack/devstack-plugin-container
            # Etcd
            enable_service etcd3
            # Kubernetes
            enable_service kubernetes-api
            enable_service kubernetes-controller-manager
            enable_service kubernetes-scheduler
            KURYR_K8S_API_PORT="8080"
            # Kubelet
            enable_service kubelet
            # Kuryr watcher
            enable_service kuryr-kubernetes
            # Enable Tempest
            enable_service tempest
            # Enable Tempest plugin
            TEMPEST_PLUGINS='/opt/stack/new/kuryr-tempest-plugin'
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST_REGEX="kuryr_tempest_plugin.tests"
          export BRANCH_OVERRIDE={branch-override}

          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          export PROJECTS="openstack/kuryr-kubernetes $PROJECTS"
          export PROJECTS="openstack/kuryr-tempest-plugin $PROJECTS"
          export PROJECTS="openstack/devstack-plugin-container $PROJECTS"

          export DEVSTACK_GATE_TOPOLOGY="multinode"

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log



- job-template:
    name: '{pipeline}-kuryr-libnetwork{kuryr_lib-src}-dsvm-fullstack-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - print-template-name:
          template-name: "{template-name}"
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin kuryr-libnetwork http://git.openstack.org/openstack/kuryr-libnetwork
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_INSTALL_TESTONLY=1

          export ENABLED_SERVICES=kuryr-libnetwork,etcd-server,docker-engine
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          export PROJECTS="openstack/kuryr-libnetwork $PROJECTS"
          if [ "{kuryr_lib-src}" == "-kuryr_lib-src" ] ; then
              export DEVSTACK_PROJECT_FROM_GIT="kuryr"
          fi
          export PROJECTS="openstack/devstack-plugin-container $PROJECTS"

          function gate_hook {{
              bash -xe $BASE/new/kuryr-libnetwork/kuryr_libnetwork/tests/contrib/gate_hook.sh fullstack
          }}
          export -f gate_hook

          function post_test_hook {{
              bash -xe $BASE/new/kuryr-libnetwork/kuryr_libnetwork/tests/contrib/post_test_hook.sh fullstack
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log

- job-template:
    name: '{pipeline}-kuryr-libnetwork{kuryr_lib-src}-dsvm-rally-{node}{suffix}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 130
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - local_conf:
          conf: |
            [[local|localrc]]
            enable_plugin kuryr-libnetwork http://git.openstack.org/openstack/kuryr-libnetwork
            enable_plugin rally git://git.openstack.org/openstack/rally
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export RALLY_SCENARIO=kuryr-libnetwork
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          export PROJECTS="openstack/kuryr-libnetwork $PROJECTS"
          export PROJECTS="openstack/rally $PROJECTS"
          export PROJECTS="openstack/devstack-plugin-container $PROJECTS"

          if [ "{kuryr_lib-src}" == "-kuryr_lib-src" ] ; then
              export DEVSTACK_PROJECT_FROM_GIT="kuryr"
          fi

          export ENABLED_SERVICES=kuryr-libnetwork,etcd-server,docker-engine

          function gate_hook {{
              bash -xe $BASE/new/kuryr-libnetwork/kuryr_libnetwork/tests/contrib/gate_hook.sh
          }}
          export -f gate_hook

          function post_test_hook {{
              $BASE/new/rally/tests/ci/rally-gate.sh
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - rally-plot
      - console-log
