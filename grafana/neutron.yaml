dashboard:
  title: Neutron Failure Rate
  time:
      from: "now-7d"
      to: "now"
  rows:
    - title: Description
      height: 100px
      panels:
        - title: Description
          content: |
            **This dashboard is managed by [Grafyaml](http://docs.openstack.org/infra/system-config/grafyaml.html).**

            If you would like to make changes to this dashboard, please see the grafana directory in [project-config](https://git.openstack.org/cgit/openstack-infra/project-config/tree/grafana/neutron.yaml).

            NOTE - 'No datapoints' in a graph means there have been no job failures reported yet.
          type: text
    - title: Graphs
      height: 320px
      panels:
        - title: Integrated Tempest Failure Rates (Gate queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.tempest-full.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.tempest-full.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'tempest-full')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-api.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-api.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-plugin-api')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-dvr.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-dvr.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-dvr')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-linuxbridge.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-linuxbridge.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-linuxbridge')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-iptables_hybrid.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-iptables_hybrid.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-iptables_hybrid')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.legacy-tempest-dsvm-py35.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.legacy-tempest-dsvm-py35.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'legacy-tempest-dsvm-py35')
          type: graph
        - title: Number of integrated Tempest jobs runs (Gate queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.tempest-full.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'tempest-full')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-api.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-plugin-api')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-dvr.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-dvr')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-linuxbridge.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-linuxbridge')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-iptables_hybrid.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-iptables_hybrid')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.legacy-tempest-dsvm-py35.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'legacy-tempest-dsvm-py35')
          type: graph
        - title: Scenario jobs Failure Rates (Gate queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-scenario-linuxbridge.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-scenario-linuxbridge.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-plugin-scenario-linuxbridge')
          type: graph
        - title: Number of scenario jobs runs (Gate queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-scenario-linuxbridge.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-plugin-scenario-linuxbridge')
          type: graph
        - title: Integrated Grenade Failure Rates (Gate queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-grenade')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-multinode.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-multinode.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-grenade-multinode')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-dvr-multinode.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-dvr-multinode.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-grenade-dvr-multinode')
          type: graph
        - title: Number of integrated Grenade jobs runs (Gate queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-grenade')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-multinode.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-grenade-multinode')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-dvr-multinode.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-grenade-dvr-multinode')
          type: graph
        - title: Functional/Fullstack Failure Rates (Gate queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-functional.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-functional.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-functional')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-fullstack.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-fullstack.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-fullstack')
          type: graph
        - title: Number of Functional/Fullstack jobs runs (Gate queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-functional.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-functional')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.neutron-fullstack.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-fullstack')
          type: graph
        - title: Unit Tests Failure Rates (Gate queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py27.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py27.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-py27')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-py35')
          type: graph
        - title: Number of Unit Tests jobs runs (Gate queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py27.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'openstack-tox-py27')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'openstack-tox-py35')
          type: graph
        - title: Coverage Failure Rates (Gate queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-cover.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-cover.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-cover')
          type: graph
        - title: Number of Coverage jobs runs (Gate queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-cover.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'openstack-tox-cover')
          type: graph
        - title: Requirements Failure Rates (Gate queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-lower-constraints.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-lower-constraints.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-lower-constraints')
          type: graph
        - title: Number of Requirements jobs runs (Gate queue)
          span: 6
          targets:
            - target: alias(summarize(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-lower-constraints.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.gate.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-lower-constraints.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-lower-constraints')
          type: graph

        - title: Integrated Tempest Failure Rates (Check queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.tempest-full.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.tempest-full.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'tempest-full')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-api.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-api.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-plugin-api')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-dvr.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-dvr.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-dvr')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-linuxbridge.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-linuxbridge.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-linuxbridge')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-iptables_hybrid.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-iptables_hybrid.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-iptables_hybrid')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.legacy-tempest-dsvm-py35.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.legacy-tempest-dsvm-py35.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'legacy-tempest-dsvm-py35')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-multinode-full.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-multinode-full.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-multinode-full (non-voting)')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-dvr-ha-multinode-full.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-dvr-ha-multinode-full.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-dvr-ha-multinode-full (non-voting)')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.tempest-slow.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.tempest-slow.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'tempest-slow')
          type: graph
        - title: Number of Integrated Tempest jobs runs (Check queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.tempest-full.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'tempest-full')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-api.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-plugin-api')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-dvr.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-dvr')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-linuxbridge.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-linuxbridge')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-iptables_hybrid.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-iptables_hybrid')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.legacy-tempest-dsvm-py35.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'legacy-tempest-dsvm-py35')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-multinode-full.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-multinode-full (non-voting)')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-dvr-ha-multinode-full.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-dvr-ha-multinode-full (non-voting)')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.tempest-slow.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'tempest-slow')
          type: graph
        - title: Scenario jobs Failure Rates (Check queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-designate-scenario.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-designate-scenario.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-plugin-designate-scenario')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-dvr-multinode-scenario.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-dvr-multinode-scenario.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-plugin-dvr-multinode-scenario (non-voting)')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-scenario-linuxbridge.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-scenario-linuxbridge.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-plugin-scenario-linuxbridge')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.ironic-tempest-dsvm-ipa-wholedisk-bios-agent_ipmitool-tinyipa.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.ironic-tempest-dsvm-ipa-wholedisk-bios-agent_ipmitool-tinyipa.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'ironic-tempest-dsvm-ipa-wholedisk-bios-agent_ipmitool-tinyipa (non-voting)')
          type: graph
        - title: Number of Scenario jobs runs (Check queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-designate-scenario.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-plugin-designate-scenario')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-dvr-multinode-scenario.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-plugin-dvr-multinode-scenario (non-voting)')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-plugin-scenario-linuxbridge.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-tempest-plugin-scenario-linuxbridge')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.ironic-tempest-dsvm-ipa-wholedisk-bios-agent_ipmitool-tinyipa.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'ironic-tempest-dsvm-ipa-wholedisk-bios-agent_ipmitool-tinyipa (non-voting)')
          type: graph
        - title: Integrated Grenade Failure Rates (Check queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-grenade')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-multinode.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-multinode.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-grenade-multinode')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-dvr-multinode.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-dvr-multinode.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-grenade-dvr-multinode')
          type: graph
        - title: Number of Integrated Grenade jobs runs (Check queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-grenade')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-multinode.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-grenade-multinode')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-grenade-dvr-multinode.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-grenade-dvr-multinode')
          type: graph
        - title: Functional/Fullstack Failure Rates (Check queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-functional.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-functional.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-functional')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-fullstack.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-fullstack.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-fullstack')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-fullstack-python35.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-fullstack-python35.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-fullstack-python35 (non-voting)')
          type: graph
        - title: Number of Functional/Fullstack jobs runs (Check queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-functional.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-functional')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-fullstack.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-fullstack')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-fullstack-python35.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-fullstack-python35 (non-voting)')
          type: graph
        - title: Unit Tests Failure Rates (Check queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py27.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py27.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-py27')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-py35')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py36.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py36.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-py36')
          type: graph
        - title: Number of Unit Tests jobs runs (Check queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py27.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'openstack-tox-py27')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'openstack-tox-py35')
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py36.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'openstack-tox-py36')
          type: graph
        - title: Coverage Failure Rates (Check queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-cover.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-cover.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-cover')
          type: graph
        - title: Number of Coverage jobs runs (Check queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-cover.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'openstack-tox-cover')
          type: graph
        - title: Requirements Failure Rates (Check queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-lower-constraints.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-lower-constraints.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-lower-constraints')
          type: graph
        - title: Number of Requirements jobs runs (Check queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-lower-constraints.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'openstack-tox-lower-constraints')
          type: graph
        - title: Rally Failure Rates (Check queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-rally-task.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-rally-task.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-rally-task')
          type: graph
        - title: Number of Rally jobs runs (Check queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.neutron-rally-task.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'neutron-rally-task')
          type: graph
        - title: Documentation Failure Rates (Check queue)
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.build-openstack-sphinx-docs.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.build-openstack-sphinx-docs.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'build-openstack-sphinx-docs')
          type: graph
        - title: Number of Documentation jobs runs (Check queue)
          span: 6
          targets:
            - target: alias(summarize(sum(stats_counts.zuul.tenant.openstack.pipeline.check.project.git_openstack_org.openstack_neutron.master.job.build-openstack-sphinx-docs.{SUCCESS,FAILURE,TIMED_OUT}),'24hours'), 'build-openstack-sphinx-docs')
          type: graph

        - title: Periodic jobs
          span: 6
          targets:
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py27-with-oslo-master.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py27-with-oslo-master.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-py27-with-oslo-master')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35-with-oslo-master.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35-with-oslo-master.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-py35-with-oslo-master')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35-with-neutron-lib-master.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.openstack-tox-py35-with-neutron-lib-master.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'openstack-tox-py35-with-neutron-lib-master')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-postgres-full.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-postgres-full.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-postgres-full')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.neutron-functional.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.neutron-functional.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-functional')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-with-ryu-master.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron.master.job.neutron-tempest-with-ryu-master.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-tempest-with-ryu-master')
            - target: alias(movingAverage(asPercent(transformNull(sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron-dynamic-routing.master.job.neutron-dynamic-routing-dsvm-tempest-with-ryu-master-scenario-ipv4.{FAILURE,TIMED_OUT})),sum(stats_counts.zuul.tenant.openstack.pipeline.periodic.project.git_openstack_org.openstack_neutron-dynamic-routing.master.job.neutron-dynamic-routing-dsvm-tempest-with-ryu-master-scenario-ipv4.{SUCCESS,FAILURE,TIMED_OUT})),'24hours'), 'neutron-dynamic-routing-dsvm-tempest-with-ryu-master-scenario-ipv4')
          type: graph
